@model IdeaSite.Models.Idea

@{
    ViewBag.Title = "Submit";
}

<h1>Submit New Idea</h1>
<hr />

@using (Html.BeginForm("Submit", "Ideas", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-md-10">
                <!--Display an error message if the submitted title is not unique.-->
                @Html.Action(actionName: "TempMessage", controllerName: "Message")
            </div>
        </div>
        <!--Box for entering an email-->
        <div class="form-group">
            If you wish to test the email function, please insert a valid email address here.
            @Html.Label("Email", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("Email", new { htmlAttributes = new { @class = "form-control" } })
                <span class="field-validation-valid text-danger" data-valmsg-for="title" data-valmsg-replace="true"></span>
                <div class="error-message">@Html.ValidationMessageFor(model => model.title)</div>
            </div>
        </div>
        <!--Box for entering a title-->
        <div class="form-group">
            @Html.LabelFor(model => model.title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                <span class="field-validation-valid text-danger" data-valmsg-for="title" data-valmsg-replace="true"></span>
                <div class="error-message">@Html.ValidationMessageFor(model => model.title)</div>
            </div>
        </div>
        <!--Box for entering a description-->
        <div class="form-group">
            @Html.LabelFor(model => model.body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 multiline-field">
                @Html.EditorFor(model => model.body, new { htmlAttributes = new { @class = "form-control shortBody" } })
                <span class="field-validation-valid text-danger" data-valmsg-for="body" data-valmsg-replace="true"></span>
                <br>
                @Html.ValidationMessageFor(model => model.body, "", new { @class = "text-danger" })
            </div>
        </div>

        <input id="statusCode" name="statusCode" value="Submitted" type="hidden">

        <!--Submit new attachments-->
        <div class="form-group">
            @Html.Label("Attachment", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="files" name="files" value="" multiple="multiple" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 btn-group">
                <input value="Submit" class="btn btn-default btn-sm" type="submit">
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default btn-sm" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
